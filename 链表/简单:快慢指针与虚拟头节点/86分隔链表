# 给定一个链表和一个特定值 x，对链表进行分隔，使得所有小于 x 的节点都在大于或等于 x 的节点之前。
# 你应当保留两个分区中每个节点的初始相对位置。
# 示例:
# 输入: head = 1->4->3->2->5->2, x = 3
# 输出: 1->2->2->4->3->5
# def partition(self, head: ListNode, x: int) -> ListNode:


# 思路：用快慢指针迭代到最后就可以了,
# 注意最后要把后一段链表的末尾设为None, 因为末尾可能是原链表上的中间节点而不是None


class Solution:
    def partition(self, head, x):
        if head == None:
            return
        cur1 = pre1 = ListNode(None)
        cur2 = pre2 = ListNode(None)
        while head != None:
            if head.val >= x:
                cur2.next = head
                cur2 = head
            else:
                cur1.next = head
                cur1 = head
            head = head.next
        if cur2 == pre2:
            return pre1.next
        cur1.next = pre2.next
        cur2.next = None
        return pre1.next
