# 计算给定二叉树的所有左叶子之和。
# 示例：
#     3
#    / \
#   9  20
#     /  \
#    15   7
# 在这个二叉树中，有两个左叶子，分别是 9 和 15，所以返回 24
# def sumOfLeftLeaves(self, root: TreeNode) -> int:


# 思路：这里用到了一个小技巧：叶节点判断, 在一些题中会遇到, 如果有叶节点判断这种
# 概念的话, 有些问题会变得很容易解答, 这里用叶节点判断+一个参数来证明他是左节点还是右节点


class Solution:
    def sumOfLeftLeaves(self, root):
        self.val = 0
        self.left(root)
        return self.val


    def left(self, node, isleft=False):
        if node == None:
            return 0
        if node.left == None and node.right == None and isleft == True:
            self.val += node.val
            return self.val
        self.left(node.left, True)
        self.left(node.right)
