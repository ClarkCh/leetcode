# 给定一个 N 叉树，找到其最大深度。
# 最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。
# 例如，给定一个 3叉树 :
# 我们应返回其最大深度，3。
# 说明:
# 树的深度不会超过 1000。
# 树的节点总不会超过 5000。
# """
# # Definition for a Node.
# class Node:
#     def __init__(self, val, children):
#         self.val = val
#         self.children = children
# """
# def maxDepth(self, root: 'Node') -> int:


# 思路：基本和二叉树的最大深度相似, 不过此处的children是一个节点集, 所以要for循环


class Solution:
    def maxDepth(self, root):
        return self.helper(root)

    def helper(self, node):
        if node == None:
            return 0
        if node.children == []:
            return 1
        total = 0
        for i in node.children:
            total = max(self.helper(i), total)
        return total + 1
